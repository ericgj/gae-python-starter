#!/usr/bin/env python

import os.path
import os
import json
from ruamel import yaml
from pystache.renderer import Renderer

def load_yaml_or_json(fname):
    ext = os.path.splitext(fname)[1]
    data = {}
    with open(fname) as f:
        if ext == '.json':
            data = json.load(f)
        elif ext == '.yaml':
            data = yaml.safe_load(f)
    return data

def load_config(dir, extras={}):
    ret = dict(
        ( os.path.splitext(f)[0], load_yaml_or_json(os.path.join(dir,f)) ) 
            for f in os.listdir(dir) if (
                os.path.splitext(f)[1] in (".yaml", ".json") and 
                os.path.isfile(os.path.join(dir,f)) 
            )
    )
    for (k,v) in extras.items():
        ret[k] = v
    return ret


from argparse import ArgumentParser
p = ArgumentParser(description='render config through templates')
p.add_argument('environ', help='app environment')
p.add_argument('--service', default='default',  help='app service')
p.add_argument('--config-dir', default='config', help='config dir')
p.add_argument('--template-dir', default='backend', help='template dir')
p.add_argument('--out-dir', default='build', help='output dir')

args = p.parse_args()

template_dir = os.path.join(args.template_dir, args.service)
if args.service == 'default' and not os.path.isdir(template_dir):
    template_dir = args.template_dir

config_dir = os.path.join(args.config_dir, args.environ)

out_dir = args.out_dir

data = load_config(config_dir, { 'environment': args.environ, 'service': args.service })
renderer = Renderer(search_dirs=[template_dir], file_extension="yaml", missing_tags='strict')

for f in os.listdir(template_dir):
    fname, ext = os.path.splitext(f)
    if ext == '.yaml' and os.path.isfile(os.path.join(template_dir,f)):
        with open( os.path.join(out_dir,f), 'w') as o:
            o.write( renderer.render_name(fname, data) )



